
/*
 * This file was automatically generated by sdbus-c++-xml2cpp; DO NOT EDIT!
 */

#ifndef __sdbuscpp_____sdbus_gen_CanProxyGlue_h__proxy__H__
#define __sdbuscpp_____sdbus_gen_CanProxyGlue_h__proxy__H__

#include <sdbus-c++/sdbus-c++.h>
#include <string>
#include <tuple>

namespace com {
namespace daimler {
namespace oagw {
namespace test {

class Can_proxy
{
public:
    static constexpr const char* INTERFACE_NAME = "com.daimler.oagw.test.Can";

protected:
    Can_proxy(sdbus::IProxy& proxy)
        : proxy_(proxy)
    {
    }

    ~Can_proxy() = default;

public:
    bool CANSignal(const std::string& name, const int32_t& value)
    {
        bool result;
        proxy_.callMethod("CANSignal").onInterface(INTERFACE_NAME).withArguments(name, value).storeResultsTo(result);
        return result;
    }

private:
    sdbus::IProxy& proxy_;
};

}}}} // namespaces

#endif
