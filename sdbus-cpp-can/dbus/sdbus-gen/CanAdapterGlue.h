
/*
 * This file was automatically generated by sdbus-c++-xml2cpp; DO NOT EDIT!
 */

#ifndef __sdbuscpp_____sdbus_gen_CanAdapterGlue_h__adaptor__H__
#define __sdbuscpp_____sdbus_gen_CanAdapterGlue_h__adaptor__H__

#include <sdbus-c++/sdbus-c++.h>
#include <string>
#include <tuple>

namespace com {
namespace daimler {
namespace oagw {
namespace test {

class Can_adaptor
{
public:
    static constexpr const char* INTERFACE_NAME = "com.daimler.oagw.test.Can";

protected:
    Can_adaptor(sdbus::IObject& object)
        : object_(object)
    {
        object_.registerMethod("CANSignal").onInterface(INTERFACE_NAME).withInputParamNames("name", "value").withOutputParamNames("retCode").implementedAs([this](const std::string& name, const int32_t& value){ return this->CANSignal(name, value); });
    }

    ~Can_adaptor() = default;

private:
    virtual bool CANSignal(const std::string& name, const int32_t& value) = 0;

private:
    sdbus::IObject& object_;
};

}}}} // namespaces

#endif
